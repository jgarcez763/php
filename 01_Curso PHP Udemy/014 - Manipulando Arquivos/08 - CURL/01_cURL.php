<!--CABEÇALHO DA PÁGINA-->

<!--BREVE INTRODUÇÃO: O CURL ESTÁ BASEADO EM UMA BIBLIOTECA(CURL), E A SUA IDÉIA ERA DE FAZER O PHP SE COMUNICAR COM OUTROS SISTEMAS REMOTAMENTE E TAMBÉM SOLUCIONOU UM PROBLEMA COM RELAÇÃO A API'S-->

<?php
echo "<hr><h1><center>Usando a cURL</center></h1><hr>";
?>

<center>
	
<?php

$cep = "26553490";
$link = "viacep.com.br/ws/$cep/json/";

// INICIA UMA SESSÃO CURL E CHAMA A VARIÁVEL $LINK QUE RETORNA O ENDEREÇO DA API:
$ch = curl_init($link);

// DEFINE UMA OPÇÃO PARA A TRANSFERENCIA DE URL:
// 1º PARÂMETRO = UM HANDLE CURL RETORNADO POR CURL INIT
// 2º PARAMETRO = A OPÇÃO CURLOPT_XXX A SER DEFINIDA -> CURLOPT_RETURNTRANSFER É UMA CONSTANTE DEFINIDA NA BIBLIOTECA.
// 3º PARAMETRO = O VALOR PARA SER DEFINIDO EM OPTION -> 1 É UM VALOR BOOLEADO, ONDE 0 = FALSE E 1 = TRUE, PORTANTO, QUERO UM RETORNO 1.
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

// VERIFICA SE O CERTIFICADO SSL ESTÁ ASSINADO DIGITALMENTE, NESSE CASO NÃO É PRECISO VERIFICAÇÃO, CASO HAJA É NECESSÁRIA A PASSAGEM DE OUTRO PARAMETRO PARA INDICAR ONDE ESTÁ LOCALIZADO O CERTIFICADO.  
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);

// FAZ A EXECUÇÃO DA CHAMADA DA URL.
$response = curl_exec($ch);

// ENCERRA A CHAMADA URL. 
curl_close($ch);

// DECODIFICA O RETORNO DAS INFORMAÇÕES DE JSON PARA ARRAY, O TRUE FOI ESPECIFICADO PARA QUE O RETORNO SE DE EM JSON E NÃO EM OBJETO.
$data = json_decode($response, true);

// EXIBIÇÃO DO ARRAY:
print_r($data);

// COMO O RETORNO DA API FOI CONVERTIDA PARA ARRAY, É POSSÍVEL ACESSAR AS CHAVES PARA OBTER SEUS RESPECTIVOS RETORNOS E CONSUMIR O WEBSERVICE COMO DESEJAR.
echo "<br><br>";
print_r($data["localidade"]);

echo "<br><br>";
print_r($data["logradouro"]);

echo "<br><br>";
print_r($data["cep"]);

?>